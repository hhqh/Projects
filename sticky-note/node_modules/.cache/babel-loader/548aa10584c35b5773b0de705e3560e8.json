{"ast":null,"code":"var _jsxFileName = \"/Users/huanghelenq/Projects/sticky-note/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Note from './components/Note';\nimport NewNote from './components/NewNote';\nimport Modal from './components/EditNoteModal';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const localDate = new Date();\n  const [isShown, setIsShown] = useState(false);\n  const [canUpdate, setUpdateNote] = useState(false);\n  const [isShownModal, showModal] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const addNote = text => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: localDate.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const updateNote = (id, text) => {\n    const filteredNotes = notes.filter(note => note.id !== id);\n    const updatedNote = notes.filter(note => note.id == id)[0];\n    updatedNote.text = text;\n    setNotes([...filteredNotes, updatedNote]);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {\n      modal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      id: note.id,\n      text: note.text,\n      date: note.date,\n      modal: showModal,\n      handleDeleteClick: deleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      handleAddNote: addNote,\n      open: isShownModal,\n      onClose: () => showModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TTdIMbthzUM+UoSaZxcTBhj611o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","NewNote","Modal","useState","nanoid","App","localDate","Date","isShown","setIsShown","canUpdate","setUpdateNote","isShownModal","showModal","notes","setNotes","addNote","text","newNote","id","date","toLocaleDateString","newNotes","updateNote","filteredNotes","filter","note","updatedNote","deleteNote","map"],"sources":["/Users/huanghelenq/Projects/sticky-note/src/App.js"],"sourcesContent":["import './App.css';\nimport Note from './components/Note';\nimport NewNote from './components/NewNote';\nimport Modal from './components/EditNoteModal';\nimport {useState} from 'react';\nimport {nanoid} from 'nanoid';\n\nfunction App() {\n  const localDate = new Date();\n  const [isShown, setIsShown] = useState(false);\n  const [canUpdate, setUpdateNote] = useState(false);\n  const [isShownModal, showModal] = useState(false);\n  const [notes, setNotes] = useState([]);\n\n  const addNote = (text) => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: localDate.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  }\n\n  const updateNote = (id, text) => {\n    const filteredNotes = notes.filter(note => note.id !== id);\n    const updatedNote = notes.filter(note => note.id == id)[0];\n    updatedNote.text = text;\n    setNotes([...filteredNotes, updatedNote]);\n  }\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n  return (\n    <div>\n      <NewNote modal={showModal}/>\n      { notes.map((note) => (\n          <Note\n              id={note.id}\n              text={note.text}\n              date={note.date}\n              modal={showModal}\n              handleDeleteClick={deleteNote}\n          /> ))}\n      <Modal handleAddNote={addNote} open={isShownModal} onClose={() => showModal(false)}/>      \n    </div>\n  ); \n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,MAAM,QAAO,QAAQ;AAAC;AAE9B,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,SAAS,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACS,YAAY,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEf,MAAM,EAAE;MACZa,IAAI,EAAEA,IAAI;MACVG,IAAI,EAAEd,SAAS,CAACe,kBAAkB;IACpC,CAAC;IACD,MAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAK,EAAEI,OAAO,CAAC;IACpCH,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAG,CAACJ,EAAE,EAAEF,IAAI,KAAK;IAC/B,MAAMO,aAAa,GAAGV,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;IAC1D,MAAMQ,WAAW,GAAGb,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1DQ,WAAW,CAACV,IAAI,GAAGA,IAAI;IACvBF,QAAQ,CAAC,CAAC,GAAGS,aAAa,EAAEG,WAAW,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,UAAU,GAAIT,EAAE,IAAK;IACzB,MAAMG,QAAQ,GAAGR,KAAK,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;IACvDJ,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,OAAO;MAAC,KAAK,EAAET;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,EAC1BC,KAAK,CAACe,GAAG,CAAEH,IAAI,iBACb,QAAC,IAAI;MACD,EAAE,EAAEA,IAAI,CAACP,EAAG;MACZ,IAAI,EAAEO,IAAI,CAACT,IAAK;MAChB,IAAI,EAAES,IAAI,CAACN,IAAK;MAChB,KAAK,EAAEP,SAAU;MACjB,iBAAiB,EAAEe;IAAW;MAAA;MAAA;MAAA;IAAA,QAC9B,CAAC,eACT,QAAC,KAAK;MAAC,aAAa,EAAEZ,OAAQ;MAAC,IAAI,EAAEJ,YAAa;MAAC,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACjF;AAEV;AAAC,GA3CQR,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}